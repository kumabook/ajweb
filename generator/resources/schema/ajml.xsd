<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	    xmlns:ajml="http://www.tt.cs.titech.ac.jp/~kumamoto/ajml/"  elementFormDefault="qualified">
<!-- widgetのインクルード-->
 <xsd:include schemaLocation="widget.xsd" />
<!-- funcのインクルード-->
 <xsd:include schemaLocation="func.xsd" />
<!-- ルート要素 -->
<xsd:element name="ajml">
  <xsd:complexType>
    <xsd:all>
      <!-- アプリケーション -->
      <xsd:element name="application">
	<xsd:complexType>
	  <xsd:all>
    	    <xsd:element name="interfaces">
	      <xsd:complexType>
		<xsd:sequence minOccurs="0" maxOccurs="unbounded">
		  <xsd:element ref="widget"/>
		</xsd:sequence>
	      </xsd:complexType>
	    </xsd:element>
    	    <xsd:element name="databases">
	      <xsd:complexType>
		<xsd:sequence minOccurs="0" maxOccurs="unbounded">
		  <xsd:element name="database" type="databaseType" />
		</xsd:sequence>
	      </xsd:complexType>
	    </xsd:element>
    	    <xsd:element name="events">
	      <xsd:complexType>
		<xsd:sequence minOccurs="0" maxOccurs="unbounded">
		  <xsd:element name="event" type="eventType" />
		</xsd:sequence>
	      </xsd:complexType>
	    </xsd:element>
	  </xsd:all>
	  <xsd:attribute name="name" type="xsd:string"/>
	</xsd:complexType>
      </xsd:element>
    </xsd:all>
  </xsd:complexType>
</xsd:element>

  <!--  データベースの定義  -->
  <xsd:complexType name="databaseType">
    <xsd:sequence minOccurs="0">
      <xsd:sequence minOccurs="0">
	<xsd:element name="property" maxOccurs="unbounded">
	  <xsd:complexType>
	    <xsd:attribute name="name" type="xsd:string"/>
	    <xsd:attribute name="type" type="xsd:string"/>
	    <xsd:attribute name="ref" type="xsd:string"/>
	    <xsd:attribute name="multiplicity" type="xsd:string"/>
	    <xsd:attribute name="primary" type="xsd:boolean"/>
	  </xsd:complexType>
	</xsd:element>
      </xsd:sequence>
      <xsd:element ref="init" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:string"/>
    <xsd:attribute name="tablename" type="xsd:string"/>
    <xsd:attribute name="type" type="xsd:string"/>
    <xsd:attribute name="dbName" type="xsd:string"/>
    <xsd:attribute name="driverName" type="xsd:string"/>
  </xsd:complexType>

  <!-- init -->
  <xsd:element name="init">
    <xsd:complexType>
      <xsd:sequence minOccurs="0" maxOccurs="unbounded">
	<xsd:element name="item">
	  <xsd:complexType>
	    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
	      <xsd:element name="property">
		<xsd:complexType>
		  <xsd:attribute name="name" type="xsd:string"/>
		  <xsd:attribute name="value" type="xsd:string"/>
		</xsd:complexType>
	      </xsd:element>
	    </xsd:sequence>
	  </xsd:complexType>
	</xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- UIの定義  -->
  <!--  ウィジェット要素 抽象要素 -->
  <xsd:element name="widget"  abstract="true" />  
  <!--  ウィジェットタイプ 抽象タイプ  -->
  <xsd:complexType name="widgetType" abstract="true"/>

  <!-- 個々のウィジェット要素(外部ファイルからインクルード) -->

  <!--  イベントタイプ   -->
  <xsd:complexType name="eventType">
    <xsd:all>
      <xsd:element name="condition" minOccurs="0" type="conditionType"/>
      <xsd:element name="action" type="actionType"/>
    </xsd:all>
    <xsd:attribute name="target" type="xsd:string" use="optional" />
    <xsd:attribute name="type" type="xsd:string" use="optional" />
  </xsd:complexType>
  
  <!--  条件タイプ   -->
  <xsd:complexType name="conditionType">
    <xsd:all minOccurs="0">
      <xsd:element ref="baseCondition"/>
    </xsd:all>
  </xsd:complexType>

  <!--  抽象条件要素   -->
  <xsd:element name="baseCondition" abstract="true" substitutionGroup="valuable"/>
 
  <!--  アクションリストタイプ   -->
  <xsd:complexType name="actionType">
    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
      <xsd:element ref="flowable"/>
    </xsd:sequence>
  </xsd:complexType>

  <!--  flowableの抽象要素  -->
  <xsd:element name="flowable" abstract="true"/>
  <!--  branch要素  -->
  <xsd:element name="branch" substitutionGroup="flowable">
    <xsd:complexType>
      <xsd:all>
	<xsd:element name="condition" minOccurs="0" type="conditionType"/>
	<xsd:element ref="then"/>
	<xsd:element ref="else"/>
      </xsd:all>
    </xsd:complexType>
  </xsd:element>

  <!--  then要素  -->  <!--  else要素  -->
  <xsd:element name="then" type="actionType"/>
  <xsd:element name="else" type="actionType"/>
  <!--  setterの抽象要素  -->
  <xsd:element name="setter" type="setterType" abstract="true" substitutionGroup="flowable"/>
  <!--  setterの抽象タイプ   -->
  <xsd:complexType name="setterType" abstract="true">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element ref="param"/>
    </xsd:choice>
  </xsd:complexType>

  <!--  action(getter, setter)の引数タイプ -->
  <xsd:element name="param" type="paramType" />
  <xsd:complexType name="paramType">
    <xsd:choice minOccurs="1" maxOccurs="1">
      <xsd:element ref="valuable"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string"/>
  </xsd:complexType>

  <!-- 引数となりうる値を表すの抽象要素 -->
  <xsd:element name="valuable"  abstract="true"/>

</xsd:schema>


