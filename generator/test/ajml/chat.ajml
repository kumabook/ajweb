<?xml version="1.0" encoding="UTF-8"?>
<ajml  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="./resources/schema/ajml.xsd" >
  <application name="chat" root="chat_room">

    
    <!-- データモデル -->
    <databases>

    <!-- ユーザテーブル -->
      <database id="users" tablename="users" dbName="jdbc:derby:work/test/">
  	<property name="user_id" type="string" primary="true"/>
  	<property name="password" type="password"/>
  	<property name="role" type="string"/>
  	<property name="mail" type="string"/>
	<init>
	  <item>
	    <property name="user_id" value="kumamoto"/>
	    <property name="password" value="kumamoto"/>
	    <property name="role" value="admin"/>
	    <property name="mail" value="hiroki.kum@gmail.com"/>
	  </item>
	  <item>
	    <property name="user_id" value="hiroki"/>
	    <property name="password" value="hiroki"/>
	    <property name="role" value="user"/>
	    <property name="mail" value="hiroki.kum@gmail.com"/>
	  </item>
	  <item>
	    <property name="user_id" value="kumabook"/>
	    <property name="password" value="kumabook"/>
	    <property name="role" value="user"/>
	    <property name="mail" value="hiroki.kum@gmail.com"/>
	  </item>
	</init>
      </database>


    <!-- チャットルームの一覧を保持するテーブル -->
      <database id="room" tablename="room" dbName="jdbc:derby:work/test/">
  	<property name="name" type="string"/>
	<property name="message" type="ref" multiplicity="*" ref="message"/>
	<init>
	  <item><property name="name" value="ルーム１"/></item>
	  <item><property name="name" value="ルーム２"/></item>
	  <item><property name="name" value="ルーム３"/></item>
	  <item><property name="name" value="ルーム４"/></item>
	  <item><property name="name" value="ルーム５"/></item>
	</init>
      </database>
      <!-- チャットのメッセージを保持するテーブル -->
      <database id="message" tablename="message" dbName="jdbc:derby:temp/test/">
	<property name="room" type="ref" multiplicity="1" ref="room"/>
      	<property name="message" type="string"/>
      	<property name="user_name" type="string"/>
      	<property name="posted" type="datetime"/>
      </database>
    </databases>


    <!-- UIモデル -->
    <interfaces>
      <panel id="rootPanel" top="0px" left="0px" width="100%" height="100%">
	<label id="titleLabel" content="チャットアプリケーション" top="30px" left="30px"/>
	<frame id="rootFrame" top="100px" left="100px" width="90%" height="90%">

	<!-- ログイン画面 -->
	<panel id="loginPanel" height="100%" width="100%">
	  <label id="userIdLabel" content="ユーザID"  top="30px" left="30px"/>
    	  <textbox id="userIdTextbox" content="" top="30px" left="130px"/>
	  <label id="passwordLabel" content="パスワード" top="60px" left="30px" />
    	  <passwordbox id="passwordbox" content="" top="60px" left="130px"/>
    	  <button id="loginButton"  content="ログイン" top="90px" left="30px"/>
	</panel>

	<!-- チャットルーム選択画面 -->
	<panel id="roomSelectPanel" width="100%" height="100%">
	  <label id="selectRoomLabel" content="ルーム選択" left="0px" top="0px"/>
    	  <selectbox id="roomSelectbox"  top="50px" left="100px" label="name"/>
    	  <button id="selectButton"  content="選択"  top="45px" left="370px"/>
  	</panel>

	<!-- チャットルーム画面-->
  	<panel id="chatRoomPanel" width="100%" height="100%">
    	  <label id="nowRoomLabel" content="0" top="0px" left="60px"/>

	  <frame id="contentsFrame" height="120px" width="600px" top="50px">
	    <!-- ユーザ名入力欄 -->
	    <panel id="entrancePanel" height="100px" width="600px">
	      <label id="userNameLabel" content="名前" left="40px" top="6px"/>
	      <textbox id="userNameTextbox"  left="100px" top="10px" value=""/>
	      <button id="enterButton" content="入室" left="100px" top="50px"/>
	      <button id="backButton" content="ルーム選択画面に戻る" left="300px" top="50px"/>
	    </panel>
	    <!-- メッセージ入力欄 -->
	    <panel id="messagePanel" height="100px" width="600px">
	      <label id="messageLabel" content="メッセージ" left="20px" top="10px"/>
	      <textbox id="messageTextbox" value="" left="150px" top="10px"/>
	      <button id="messageSubmitButton" content="送信" left="100px" top="50px"/>
	      <button id="exitButton" content="退室" left="350px" top="50px"/>
	    </panel>
	  </frame>

      	  <table id="messageTable" top="200px" left="100px" width="800px" height="600px">
      	    <th field="user_name" name="名前" width="auto"/>
	    <th field="message" name="メッセージ" width="auto"/>
      	    <th field="posted" name="投稿日時" width="350px"/>
      	    <th field="id" name="id" width="auto"/>
      	    <th field="room" name="room" width="auto"/>
      	  </table>
	</panel>
	</frame>
      </panel>
      <!-- ログインメッセージダイアログ -->
      <dialog id="loginFailDialog" title="login failed" width="300px" height="100px" content="ログインに失敗しました"/>
    </interfaces>

    <!--イベントモデル -->
    <events>
      <!-- 初期画面の設定-->
      <event target="rootFrame" type="display">
	<action>
	  <call element="rootFrame" func="selectPanel">
	    <param name="panel">
	      <element>loginPanel</element>
	    </param>
	  </call>
	</action>
      </event>

<!-- ログイン処理 -->
      <event target="loginButton" type="click">
	<action>
	  <login>
	    <param name="userid">
	      <get element="userIdTextbox" property="value"/>
	    </param>
	    <param name="password">
	      <get element="passwordbox" property="value"/>
	    </param>
	  </login>
	  <branch>
	    <condition>
	      <success/>
	    </condition>
	    <then>
	      <call element="rootFrame" func="selectPanel">
		<param name="panel">
		  <element>roomSelectPanel</element>
		</param>
	      </call>
	    </then>
	    <else>
	      <call element="loginFailDialog" func="show"/>
	    </else>
	  </branch>
	</action>
      </event>

      <!-- 入室画面の初期化-->
      <event target="roomSelectPanel" type="display">
	<action>
	  <!-- チャットルームの一覧の取得-->
	  <call element="roomSelectbox" func="load">
	    <param name="datum">
	      <select database="room"/>
	    </param>
	  </call>
	</action>
      </event>
      <!-- チャットルーム画面の初期化-->
      <event target="selectButton" type="click">
	<action>
	  <!-- ページを遷移-->
	  <call element="rootFrame" func="selectPanel">
	    <param name="panel">
	      <element>chatRoomPanel</element>
	    </param>
	  </call>
	  <!-- ルーム名を表示-->
	  <call element="nowRoomLabel" func="setContent">
	    <get element="roomSelectbox" property="selectItem">
	      <param name="property">
		<string>name</string>
	      </param>
	    </get>
	  </call>
	  <!-- メッセージリストの取得-->
	  <call element="messageTable" func="load">
	    <param name="datum">
	      <selectByCondition database="message">
		<condition>
		  <eq>
		    <targetItem property="room"/>
		    <get element="roomSelectbox" property="selectItem"/>
		  </eq>
		</condition>
	      </selectByCondition>

	    </param>
	  </call>
	</action>
      </event>
      <!-- 入室処理-->
      <event target="enterButton" type="click">
	<action>
	  <insert database="message">
	    <param name="message">
	      <concat>
		<param name="left">
		  <get element="userNameTextbox" property="value"/>
		</param>
		<param name="right">
		  <string>が入室しました。</string>
		</param>
	      </concat>
	    </param>
	    <param name="user_name">
	      <get element="userNameTextbox" property="value"/>
	    </param>
	    <param name="posted"> 
	      <datetime/>
	    </param>
	    <param name="room">
	      <get element="roomSelectbox" property="selectItem"/>
	    </param>
	  </insert>
	  <call element="contentsFrame" func="selectPanel">
	    <param name="panel">
	      <element>messagePanel</element>
	    </param>
	  </call>
	</action>
      </event> 

      <!-- メッセージの送信-->
      <event target="messageSubmitButton" type="click">
	<action>
	  <insert id="insert_message" database="message">
	    <param name="message">
	      <get element="messageTextbox" property="value"/>
	    </param>
	    <param name="user_name"> 
	      <get element="userNameTextbox" property="value"/>
	    </param>
	    <param name="room">
	      <get element="roomSelectbox" property="selectItem"/>
	    </param>
	    <param name="posted">
	      <datetime/>
	    </param>
	  </insert>
	  <branch>
	    <condition>
	      <success func_id = "insert_message">
	      </success>
	    </condition>
	    <then>
	    </then>
	    <else>
	    </else>
	  </branch>
	</action>
      </event>
      <!-- メッセージの変更を反映-->
      <event target="message" type="insert">
	<condition>
	  <eq>
	    <receivedItem property="room"/>
	    <get element="roomSelectbox" property="selectItem"/>
	  </eq>
	</condition>
	<action>
	  <call element="messageTable" func="insert">
	    <param name="item">
	      <receivedItem/>
	    </param>
<!--	    <param name="user_name">
	      <receivedItem property="user_name"/>
	    </param>
	    <param name="message">
	      <receivedItem property="message"/>
	    </param>
	    <param name="posted">
	      <receivedItem property="posted"/>
	    </param> -->
	  </call>
	</action>
      </event>
      <!-- 退室処理-->      
      <event target="exitButton" type="click">
	<action>
	  <insert database="message">
	    <param name="message">
	      <concat>
		<param name="left">
		  <get element="userNameTextbox" property="value"/>
		</param>
		<param name="right">
		  <string>が退室しました。</string>
		</param>
	      </concat>
	    </param>
	    <param name="user_name">
	      <get element="userNameTextbox" property="value"/>
	    </param>
	    <param name="posted"> 
	      <datetime/>
	    </param>
	    <param name="room">
	      <get element="roomSelectbox" property="selectItem"/>
	    </param>
	  </insert>
	  <call element="contentsFrame" func="selectPanel">
	    <param name="panel">
	      <element>entrancePanel</element>
	    </param>
	  </call>
	</action>
      </event>
      <event target="backButton" type="click"> 
	<action>
	  <call element="rootFrame" func="selectPanel">
	    <param name="panel">
	      <element>roomSelectPanel</element>
	    </param>
	  </call>
	</action>
      </event>
      <!-- ルーム選択画面戻る-->      
      
    </events>
  </application>
</ajml>
